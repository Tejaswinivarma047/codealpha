# -*- coding: utf-8 -*-
"""Machine Learning Task-1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MtbN0wkzKURolJQvL8vT13oXMGcNMt6u
"""

pip install pandas scikit-learn

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

np.random.seed(0)
data_size = 1000
income = np.random.randint(20000, 120000, data_size)
credit_history = np.random.randint(0, 2, data_size)  # 0: Bad, 1: Good
age = np.random.randint(18, 70, data_size)
loan_amount = np.random.randint(1000, 80000, data_size)
creditworthy = (income > 110000) & (credit_history == 1) & (age > 21)

# Create DataFrame
df = pd.DataFrame({
    'Income': income,
    'Credit_History': credit_history,
    'Age': age,
    'Loan_Amount': loan_amount,
    'Creditworthy': creditworthy.astype(int)
})



X = df.drop('Creditworthy', axis=1)
y = df['Creditworthy']


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)
model = LogisticRegression()
model.fit(X_train_scaled, y_train)

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix


y_pred = model.predict(X_test_scaled)

accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')

print("\nClassification Report:")
print(classification_report(y_test, y_pred))

print("\nConfusion Matrix:")
print(confusion_matrix(y_test, y_pred))